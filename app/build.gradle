plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-android-extensions'
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.0"

    defaultConfig {
        applicationId "com.erbe.simplecalculator"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {

    implementation "org.jetbrains.kotlin:kotlin-stdlib:1.4.21"
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.3.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    androidTestImplementation 'com.kaspersky.android-components:kaspresso:1.2.0'
}

//jacoco {
//    toolVersion = "0.8.5"
//}
//
//tasks.withType(Test) {
//    jacoco.includeNoLocationClasses = true
//}
//
//def fileFilter = ['**/R.class', '**/R$*.class', '**/BuildConfig.*',
//                  '**/Manifest*.*', '**/*Test*.*', 'android/**/*.*']
//def debugTree = fileTree(dir: "$project.buildDir/tmp/kotlin-classes/debug", excludes: fileFilter)
//def mainSrc = "$project.projectDir/src/main/java"
//
//task jacocoTestReport(type: JacocoReport) {
//    dependsOn = ['testDebugUnitTest', 'createDebugCoverageReport']
//    reports {
//        xml.enabled = false
//        html.enabled = true
//    }
//
//    sourceDirectories.from = files([mainSrc])
//    classDirectories.from = files([debugTree])
//    executionData.from = fileTree(dir: project.buildDir, includes: [
//            'jacoco/testDebugUnitTest.exec',
//            'outputs/code_coverage/debugAndroidTest/connected/*.ec'
//    ])
//}
//
//task jacocoTestCoverageVerification(type: JacocoCoverageVerification) {
//    dependsOn = ['jacocoTestReport']
//    enabled = true
//    sourceDirectories.from = files([mainSrc])
//    classDirectories.from = files([debugTree])
//    executionData.from = fileTree(dir: project.buildDir, includes: [
//            'jacoco/testDebugUnitTest.exec',
//            'outputs/code_coverage/debugAndroidTest/connected/*.ec'
//    ])
//    violationRules {
//        failOnViolation = true
//
//        // Since adding features means adding a class in operators package, make sure no class is left uncovered i.e. MISSEDCOUNT should be 0.
//        rule {
//            enabled = true
//            element = 'PACKAGE'
//            includes = ['com.erbe.simplecalculator.operators']
//            limit {
//                counter = 'CLASS'
//                value = 'MISSEDCOUNT'
//                maximum = 0
//            }
//        }
//        rule {
//            element = 'PACKAGE'
//            includes = ['com.erbe.simplecalculator']
//            limit {
//                value = 'COVEREDRATIO'
//                counter = 'INSTRUCTION'
//                minimum = 0.8
//            }
//        }
//    }
//}
//
//check.dependsOn jacocoTestCoverageVerification